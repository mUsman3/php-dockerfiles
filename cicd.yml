name: Laravel

on:
  push:
    branches: [ "@feature/cicd" ]
  pull_request:
    branches: [ "@feature/cicd" ]

jobs:
  laravel-build:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
    - name: Compiling JS Code
      run: |
        npm install
        npm run prod
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    # - name: Create Database
    #   run: |
    #     mkdir -p database
    #     touch database/database.sqlite
    # - name: Execute tests (Unit and Feature tests) via PHPUnit
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: vendor/bin/phpunit
    - name: create deployment artifacts
      env: 
        GITHUB_SHA: ${{ github.sha }}
      run: tar -zcf "${{ github.sha }}".tar.gz --exclude=*.git --exclude=node_modules *
    - name: publish artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ${{ github.sha }}.tar.gz
  
  laravel-release-preparation:
    runs-on: ubuntu-latest
    needs: laravel-build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build
      - name: upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.UN }}
          password: ${{ secrets.PASSWORD }}
          source: ${{ github.sha }}.tar.gz
          target: /tmp
      - name: extract files and creating directries
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.UN }}
          password: ${{ secrets.PASSWORD }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "/tmp/releases/${GITHUB_SHA}"
            tar -xzf /tmp/${GITHUB_SHA}.tar.gz -C "/tmp/releases/${GITHUB_SHA}"

            # rm -rf /tmp/releases/${ GITHUB_SHA }/storage
            # mkdir -p /tmp/storage/{app.public,framework,logs}
            # mkdir -p /tmp/storage/framework/{cache,sessions,testing,views}
            # chmod -R 0777 /tmp/storage

  run-before-hooks:
    name: before hooks
    runs-on: ubuntu-latest
    needs: [ laravel-build,laravel-release-preparation ]
    steps:
      - name: runs before hooks
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: '/tmp/releases/${{ github.sha }}'
          ACTIVE_RELEASE_PATH: /var/www/html/current
          STORAGE_PATH: /tmp/storage
          BASE_PATH: /tmp
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.UN }}
          password: ${{ secrets.PASSWORD }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
          script: |
            echo ${{ github.sha }}

  activating-release:
    name: activate release
    runs-on: ubuntu-latest
    needs: [ laravel-build,laravel-release-preparation,run-before-hooks ]
    steps:
      - name: runs before hooks
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: '/tmp/releases/${{ github.sha }}'
          ACTIVE_RELEASE_PATH: /var/www/html/current
          STORAGE_PATH: /tmp/storage
          BASE_PATH: /tmp
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.UN }}
          password: ${{ secrets.PASSWORD }}
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH
          script: |
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            chown -R root:root /var/www/html 
            chgrp -R www-data /var/www/html/current/storage /var/www/html/current/bootstrap/cache
            chmod -R ug+rwx /var/www/html/current/storage /var/www/html/current/bootstrap/cache



          
